@model PagedList.IPagedList<PatientRoomManagement.Models.Assignment>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Assignments";
}

<h2>Assignments</h2>

<nav class="navbar navbar-default">
    <div class="navbar-collapse">
        <div class="btn-group" role="group" aria-label="...">
            <button type="button" class="btn btn-default navbar-btn navbar-left">
                <i class="fa fa-user"></i>&nbsp;<i class="fa fa-arrow-right"></i>&nbsp;<i class="fa fa-bed"></i>
            </button>
            @Html.ActionLink("Assign patient to a room", "Create", null, new { @class = "btn btn-primary navbar-btn navbar-left" })
        </div>

        @using (Html.BeginForm("Index", "Assignment", null, FormMethod.Get, new { @class = "navbar-form navbar-right col-md-6", role = "search" }))
        {
            <div class="form-group">
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search by name or number" })
            </div>
            <button class="btn btn-primary" type="submit"><i class="fa fa-search"></i></button>
        }
    </div>
</nav>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Full Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Room Number", "Index", new { sortOrder = ViewBag.RoomNumberSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Sign-in Date", "Index", new { sortOrder = ViewBag.SigninSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Sign-out Date", "Index", new { sortOrder = ViewBag.SignoutSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Patient.FullName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Room.Number)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SignInDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SignOutDate)
        </td>
        @if (!item.SignOutDate.HasValue)
        {
            <td>
                <a class="btn btn-danger btn-xs" href="/Assignment/Signout/@item.Id"><i class="fa fa-sign-out"></i>&nbsp;Sign-out</a>
            </td>
        }
        else
        {
            <td></td>
        }
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))