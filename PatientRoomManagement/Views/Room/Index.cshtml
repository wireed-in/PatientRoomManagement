@model PagedList.IPagedList<PatientRoomManagement.Models.Room>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Rooms";
}

<h2>Rooms</h2>

<nav class="navbar navbar-default">
    <div class="navbar-collapse">
        <div class="btn-group" role="group" aria-label="...">
            <button type="button" class="btn btn-default navbar-btn navbar-left"><i class="fa fa-hospital-o"></i></button>
            @Html.ActionLink("Create New Room", "Create", null, new { @class = "btn btn-primary navbar-btn navbar-left" })
        </div>

        @using (Html.BeginForm("Index", "Room", null, FormMethod.Get, new { @class = "navbar-form navbar-right col-md-6", @role = "search" }))
        {
            <div class="form-group">
                @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search by room number" })
            </div>
            <button class="btn btn-primary" type="submit"><i class="fa fa-search"></i></button>
        }
    </div>
</nav>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.GenderSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Room Number", "Index", new { sortOrder = ViewBag.NumberSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Number Of Beds", "Index", new { sortOrder = ViewBag.BedsSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().AvailableSpace)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @if (string.IsNullOrEmpty(item.Gender))
            {
                <i class="fa fa-transgender" style="font-size: 18px"></i>
            }
            else
            {
                <i class="fa fa-@Html.DisplayFor(modelItem => item.Gender).ToString().ToLower()" style="font-size: 18px"></i>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Number)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NumberOfBeds)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AvailableSpace)
        </td>
        <td>
            <a class="btn btn-info btn-xs" href="/Room/Details/@item.Id"><i class="fa fa-search"></i>&nbsp;View</a>
            <a class="btn btn-warning btn-xs" href="/Room/Edit/@item.Id"><i class="fa fa-pencil-square-o"></i>&nbsp;Edit</a>
            <a class="btn btn-danger btn-xs" href="/Room/Delete/@item.Id"><i class="fa fa-trash"></i>&nbsp;Delete</a>
        </td>
    </tr>
}

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))